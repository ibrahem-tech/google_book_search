{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/NoMatch.js","components/Form/index.js","utils/API.js","components/Results/index.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Header","Wrapper","props","NoMatch","role","aria-label","Form","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","query","axios","get","delete","then","result","data","bookData","post","Results","state","savedBooks","handleSave","book","map","_id","includes","API","deletedBook","setState","filter","catch","err","console","error","savedBook","concat","this","books","length","key","alt","title","src","image","authors","description","href","link","target","Component","Search","makeBook","volumeInfo","imageLinks","thumbnail","previewLink","searchBook","res","items","event","preventDefault","React","Saved","App","NavBar","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.84d5fe98.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n\nfunction Navbar() {\n    return(\n        <nav className=\"navbar navbar-expand-lg text-light\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">Google Books</Link>\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link\n                        to=\"/search\"\n                        className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                    > Search</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        to=\"/saved\"\n                        className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                    >Saved</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>\n    );\n}\n\nexport default Navbar;"," \nimport React from \"react\";\n// import style from \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <div className=\"container text-light\">\n                <h1>Google Books Search</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Header from \"../components/Header\";\n\nfunction NoMatch() {\n  return (\n    <div>\n          <Header>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                ðŸ™„\n              </span>\n            </h1>\n          </Header>\n    </div>\n  );\n}\n\nexport default NoMatch;","import React from \"react\";\n\nfunction Form(props){\n    return(\n        <di className=\"container\">\n            <form>\n                <div className= \"form-group\">\n                    <label htmlFor=\"search\"><h3>Search for and save Books of intrest</h3></label>\n                    <input\n                       onChange={props.handleInputChange}\n                       value={props.search}\n                       name=\"search\"\n                       type=\"text\"\n                       className=\"form-control\"\n                       placeholder=\"Search a Book\"\n                       id=\"search\">\n                       </input>\n                       <button onClick={props.handleFormSubmit} className=\"btn btn-dark mt-3 mb-5\">\n        Search\n        </button>\n\n                </div>\n            </form>\n        </di>\n    );\n}\n\nexport default Form;\n","import axios from \"axios\";\n\nexport default {\n  getBook: function (query) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\n  },\n  // Get the saved a books from the database\n  savedBooks: function () {\n    return axios.get(\"/api/books\").then(result => result.data);\n  }\n};\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\n\nclass Results extends Component {\n\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    handleSave = book => {\n\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\n            API.deleteBook(book._id)\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\n                .catch(err => console.error(err));\n        } else {\n            API.saveBook(book)\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\n                .catch(err => console.error(err));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.props.books.length ? (\n                    <h1 className=\"text-center\">No Results to Display</h1>\n                ) : (\n                        <div>\n                            {this.props.books.map(result => (\n                                <div className=\"card mb-3\" key={result._id}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\n                                                <p className=\"card-text\">{result.description}</p>\n                                                <div>\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3\" target=\"_blank\" >View</a>\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3\" >\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\n\nclass Search extends React.Component {\n    state = {\n        value: \"\",\n        books: []\n    };\n\n    componentDidMount() {\n        this.searchBook();\n    }\n\n    makeBook = bookData => {\n        return {\n            _id: bookData.id,\n            title: bookData.volumeInfo.title,\n            authors: bookData.volumeInfo.authors,\n            description: bookData.volumeInfo.description,\n            image: bookData.volumeInfo.imageLinks.thumbnail,\n            link: bookData.volumeInfo.previewLink\n        }\n    }\n\n    searchBook = query => {\n        API.getBook(query)\n            .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n            .catch(err => console.error(err));\n    };\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchBook(this.state.search);\n    };\n\n    render() {\n        return (\n            <div>\n                <Form\n                    search={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <div className=\"container\">\n                    <h2>Results</h2>\n                    <Results books={this.state.books} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Results from \"../components/Results\";\n\nclass Saved extends Component {\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Saved books</h2>\n                <Results books={this.state.savedBooks} />\n            </div>\n        )\n    }\n}\n\nexport default Saved;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport NoMatch from \"./pages/NoMatch\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Header />\n          <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/noMatch\" component={NoMatch} />\n          </Wrapper>\n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}